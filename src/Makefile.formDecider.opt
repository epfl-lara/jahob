# for profiling:
# OCAMLC=ocamlcp -p f
OCAMLC=ocamlc.opt
OCAMLOPT=ocamlopt.opt
OCAMLDEP=ocamldep
OCAMLDOC=ocamldoc
DIRS=ast bapa decision form isabelle coq tptp \
     jast joust main mona parspec \
     util vcgen smtlib bohne
INCLUDES=-I ast -I bapa -I decision -I form -I isabelle -I coq -I tptp \
	-I jast -I joust -I main -I mona -I parspec -I presburger \
	-I util -I vcgen -I smtlib
OCAMLFLAGS=$(INCLUDES)    # add other options for ocamlc here
OCAMLOPTFLAGS=$(INCLUDES)  # add other options for ocamlopt here
OCAMLYACC=ocamlyacc
OCAMLYACCFLAGS=
OCAMLLEX=ocamllex
BIN=../bin
DOC=../doc
LIB=../lib
DOC_SRC=*/*.ml */*.mli
DEP_DOT_FILE=$(DOC)/depend/dependencies.dot
DEP_PS_FILE=$(DOC)/depend/dependencies.ps
DEP_PDF_FILE=$(DOC)/depend/dependencies.pdf

all: clean depend $(BIN)/formDecider.opt

COMMON_FILES=util/util.cmx util/debug.cmx \
	main/common.cmx main/cmdLine.cmx

# ------------------------------------------------------------
# form/
# ------------------------------------------------------------

form/yaccForm.output form/yaccForm.mli form/yaccForm.ml: form/yaccForm.mly
	$(OCAMLYACC) $(OCAMLYACCFLAGS) form/yaccForm.mly

form/lexForm.ml: form/lexForm.mll
	$(OCAMLLEX) form/lexForm.mll

form/yaccForm.cmo: form/yaccForm.cmi

FORM_FILES=form/form.cmx form/typeVars.cmx form/mlPrintForm.cmx form/printForm.cmx form/formUtil.cmx \
	form/parsingFormAux.cmx form/yaccForm.cmx form/lexForm.cmx \
	form/parseForm.cmx form/typeReconstruct.cmx form/termRewrite.cmx \
	coq/printFormCoq.cmx form/folTranslation.cmx 

# ------------------------------------------------------------
# isabelle/
# ------------------------------------------------------------

ISABELLE_FILES=isabelle/vclemmas.cmx isabelle/isabelle.cmx 

# ------------------------------------------------------------
# Coq/
# ------------------------------------------------------------

COQ_FILES=coq/coq.cmx 

# ------------------------------------------------------------
# TPTP/
# ------------------------------------------------------------

TPTP_FILES=tptp/assumpSort.cmx tptp/tptpPrettyPrinter.cmx tptp/spassPrettyPrinter.cmx

# ------------------------------------------------------------
#                        DECISION PROCEDURES
# ------------------------------------------------------------

# ------------------------------------------------------------
# mona/
# ------------------------------------------------------------

MONA_FILES=mona/monaForm.cmx mona/monaPrint.cmx mona/monaUtil.cmx \
	mona/monaConvert.cmx mona/mona.cmx

# ------------------------------------------------------------
# bapa/
# ------------------------------------------------------------

BAPA_FILES= $(PRES_FILES) $(SMTLIB_FILES) \
	bapa/alpha.cmx bapa/formbapa.cmx bapa/bapaform.cmx \
	bapa/nlogn.cmx bapa/qfbapa.cmx bapa/bapa.cmx

# ------------------------------------------------------------
# smtlib/
# ------------------------------------------------------------

SMTLIB_FILES=smtlib/smtPrint.cmx smtlib/smtTranslate.cmx \
	smtlib/smtCvcl.cmx

# ------------------------------------------------------------
# decision/
# ------------------------------------------------------------

DECISION_FILES=$(FORM_FILES) \
	$(ISABELLE_FILES) $(COQ_FILES) $(MONA_FILES) \
	$(BAPA_FILES) $(SIMPLIFY_FILES) $(TPTP_FILES) \
	decision/slice.cmx decision/decider.cmx decision/idecider.cmx \
	decision/cachedDecider.cmx

# ------------------------------------------------------------
# main/
# ------------------------------------------------------------

$(BIN)/formDecider.opt: $(COMMON_FILES) $(DECISION_FILES) main/formDecider.cmx
	$(OCAMLOPT) -o $@ $(OCAMLFLAGS) unix.cmxa str.cmxa \
	$(COMMON_FILES) $(DECISION_FILES) main/formDecider.cmx $(CCOPTS)

# ------------------------------------------------------------
# $(BIN)/timed_command
# ------------------------------------------------------------

$(BIN)/timed_command: unix-utils/timed_command.c
	gcc -o $(BIN)/timed_command unix-utils/timed_command.c

# ------------------------------------------------------------
# Common rules
# ------------------------------------------------------------
.SUFFIXES: .ml .mli .cmx .cmi .cmx .mly .mll

.ml.annot:
	$(OCAMLC) $(OCAMLFLAGS) -c -g $<

.mli.cmi:
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $<

.ml.cmx:
	$(OCAMLOPT) $(OCAMLOPTFLAGS) -c $<

# Clean up
cleanast:
	cd ast; \
	rm -f *.cm[iox] *.annot

cleanbapa:
	cd bapa; \
	rm -f *.cm[iox] *.annot

cleandecision:
	cd decision; \
	rm -f *.cm[iox] *.annot

cleanform:
	rm -f $(BIN)/testForm; \
	cd form; \
	rm -f *.cm[iox] *.annot \
	rm -f yaccForm.ml yaccForm.mli lexForm.ml

cleanmona:
	rm -f $(BIN)/testmona; \
	cd mona; \
	rm -f *.cm[iox] *.annot \

cleanparspec:
	cd parspec; \
	rm -f *.cm[iox] *.annot \
	rm -f yaccSpec.ml yaccSpec.mli lexSpec.ml

cleanmain:
	cd main; \
	rm -f *.cm[iox] *.annot

cleanpres:
	cd presburger; \
	rm -f *.cm[iox] *.annot

cleanutil:
	cd util; \
	rm -f *.cm[iox] *.annot

cleansimplify:
	cd simplify; \
	rm -f *.cm[iox] *.annot

cleansmtlib:
	cd smtlib; \
	rm -f *.cm[iox] *.annot

cleanisabelle:
	cd isabelle; \
	rm -f *.cm[iox] *.annot

cleantptp:
	cd tptp; \
	rm -f *.cm[iox] *.o *.annot

clean: cleanast cleanbapa cleandecision cleanform cleanparspec \
	cleanmona cleanpres cleanutil \
	cleanmain cleanisabelle cleansimplify cleansmtlib \
	cleantptp

# Dependencies
beforedepend: form/yaccForm.mli form/yaccForm.ml form/lexForm.ml 

depend: beforedepend
	(for d in $(DIRS); \
	do $(OCAMLDEP) $(INCLUDES) -native $$d/*.mli $$d/*.ml; \
	done) > .depend.opt

-include .depend.opt
