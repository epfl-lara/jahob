  ([|((SetIterBoundedArray_maxSize :: (obj => int)) = ((% (this::obj). (fieldRead (Array_length :: (obj => int)) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this :: obj)))) :: (obj => int)));
(token_NoOwner ~= token_Object);
(token_NoOwner ~= token_Array);
(token_NoOwner ~= token_String);
(token_NoOwner ~= token_SetIterBoundedArray);
(token_Object ~= token_Array);
(token_Object ~= token_String);
(token_Object ~= token_SetIterBoundedArray);
(token_Array ~= token_String);
(token_Array ~= token_SetIterBoundedArray);
(token_String ~= token_SetIterBoundedArray);
comment ''unalloc_lonely_SetIterBoundedArray'' (ALL (x::obj). ((((x :: obj) : (SetIterBoundedArray :: obj set)) & ((x :: obj) ~: (Object_alloc :: obj set))) --> ((fieldRead Object_owner x) = token_NoOwner)));
comment ''unalloc_lonely_String'' (ALL (x::obj). ((((x :: obj) : (String :: obj set)) & ((x :: obj) ~: (Object_alloc :: obj set))) --> ((fieldRead Object_owner x) = token_NoOwner)));
comment ''unalloc_lonely_Array'' (ALL (x::obj). ((((x :: obj) : (Array :: obj set)) & ((x :: obj) ~: (Object_alloc :: obj set))) --> ((fieldRead Object_owner x) = token_NoOwner)));
comment ''unalloc_lonely_Object'' (ALL (x::obj). ((((x :: obj) : (Object :: obj set)) & ((x :: obj) ~: (Object_alloc :: obj set))) --> ((fieldRead Object_owner x) = token_NoOwner)));
((null :: obj) : (Object_alloc :: obj set));
(((Object Int Array) :: obj set) = ({null} :: obj set));
(((Object Int String) :: obj set) = ({null} :: obj set));
(((Object Int SetIterBoundedArray) :: obj set) = ({null} :: obj set));
(((Array Int String) :: obj set) = ({null} :: obj set));
(((Array Int SetIterBoundedArray) :: obj set) = ({null} :: obj set));
(((String Int SetIterBoundedArray) :: obj set) = ({null} :: obj set));
(ALL (this::obj). comment ''BasicIntegrity'' ((fieldRead (SetIterBoundedArray_init :: (obj => bool)) (this :: obj)) --> ((((fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) :: int) <= ((fieldRead (SetIterBoundedArray_maxSize :: (obj => int)) (this :: obj)) :: int)) & ((0 :: int) <= ((fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) :: int)) & ((null :: obj) ~: ((fieldRead (SetIterBoundedArray_content :: (obj => obj set)) (this :: obj)) :: obj set)))));
(ALL (this::obj). ((fieldRead (SetIterBoundedArray_init :: (obj => bool)) this) --> ((((fieldRead (SetIterBoundedArray_a :: (obj => obj)) this) :: obj) ~= (null :: obj)) & ((fieldRead Object_owner (fieldRead (SetIterBoundedArray_a :: (obj => obj)) this)) = token_SetIterBoundedArray))));
comment ''valuesNonNull'' (ALL (this::obj) (i::int). ((((0 :: int) <= (i :: int)) & ((this :: obj) : (Object_alloc :: obj set)) & ((this :: obj) : (SetIterBoundedArray :: obj set)) & (fieldRead (SetIterBoundedArray_init :: (obj => bool)) this) & (intless i (fieldRead (SetIterBoundedArray_size :: (obj => int)) this))) --> (((arrayRead (Array_arrayState :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) this) i) :: obj) ~= (null :: obj))));
comment ''arraysDisjoint'' (ALL (ma1::obj) (ma2::obj). (((fieldRead (SetIterBoundedArray_init :: (obj => bool)) ma2) & ((ma2 :: obj) : (SetIterBoundedArray :: obj set)) & ((ma2 :: obj) : (Object_alloc :: obj set)) & ((ma1 :: obj) : (Object_alloc :: obj set)) & ((ma1 :: obj) : (SetIterBoundedArray :: obj set)) & (fieldRead (SetIterBoundedArray_init :: (obj => bool)) ma1) & (((fieldRead (SetIterBoundedArray_a :: (obj => obj)) ma1) :: obj) = ((fieldRead (SetIterBoundedArray_a :: (obj => obj)) ma2) :: obj))) --> ((ma1 :: obj) = (ma2 :: obj))));
comment ''noDuplicates'' (ALL (this::obj) (i::int) (j::int). (((intless j (fieldRead (SetIterBoundedArray_size :: (obj => int)) this)) & (intless i (fieldRead (SetIterBoundedArray_size :: (obj => int)) this)) & (fieldRead (SetIterBoundedArray_init :: (obj => bool)) this) & ((this :: obj) : (SetIterBoundedArray :: obj set)) & ((this :: obj) : (Object_alloc :: obj set)) & ((0 :: int) <= (i :: int)) & ((0 :: int) <= (j :: int)) & (((arrayRead (Array_arrayState :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) this) i) :: obj) = ((arrayRead (Array_arrayState :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) this) j) :: obj))) --> ((i :: int) = (j :: int))));
((x :: obj) ~: ((fieldRead (SetIterBoundedArray_content :: (obj => obj set)) (this :: obj)) :: obj set));
(fieldRead (SetIterBoundedArray_init :: (obj => bool)) (this :: obj));
((x :: obj) ~= (null :: obj));
(intless (fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) (fieldRead (SetIterBoundedArray_maxSize :: (obj => int)) (this :: obj)));
((SetIterBoundedArray_content :: (obj => obj set)) = ((% (this::obj). {n. (EX (i::int). ((intless i (fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj))) & ((0 :: int) <= (i :: int)) & ((n :: obj) = ((arrayRead (Array_arrayState :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this :: obj)) i) :: obj))))}) :: (obj => (obj set))));
comment ''thisNotNull'' ((this :: obj) ~= (null :: obj));
comment ''x_type'' ((x :: obj) : (Object :: obj set));
comment ''x_type'' ((x :: obj) : (Object_alloc :: obj set));
comment ''tmp_1_type'' ((tmp_1 :: obj) : (Array :: obj set));
comment ''tmp_1_type'' ((tmp_1 :: obj) : (Object_alloc :: obj set));
comment ''thisType'' ((this :: obj) : (SetIterBoundedArray :: obj set));
comment ''thisType'' ((this :: obj) : (Object_alloc :: obj set));
((SetIterBoundedArray_content_5 :: (obj => (obj set))) = ((% (this__5::obj). {n. (EX (i::int). ((intless i (fieldRead (SetIterBoundedArray_size :: (obj => int)) (this__5 :: obj))) & ((0 :: int) <= (i :: int)) & ((n :: obj) = ((arrayRead ((arrayWrite (Array_arrayState :: (obj => (int => obj))) ((fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this :: obj)) :: obj) ((fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) :: int) (x :: obj)) :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this__5 :: obj)) i) :: obj))))}) :: (obj => (obj set))));
((SetIterBoundedArray_content_1 :: (obj => obj set)) = ((% (this__4::obj). {n. (EX (i::int). ((intless i (fieldRead ((fieldWrite (SetIterBoundedArray_size :: (obj => int)) (this :: obj) ((intplus ((fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) :: int) (1 :: int)) :: int)) :: (obj => int)) (this__4 :: obj))) & ((0 :: int) <= (i :: int)) & ((n :: obj) = ((arrayRead ((arrayWrite (Array_arrayState :: (obj => (int => obj))) ((fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this :: obj)) :: obj) ((fieldRead (SetIterBoundedArray_size :: (obj => int)) (this :: obj)) :: int) (x :: obj)) :: (obj => (int => obj))) (fieldRead (SetIterBoundedArray_a :: (obj => obj)) (this__4 :: obj)) i) :: obj))))}) :: (obj => (obj set))))|] ==>
    ((fieldRead (SetIterBoundedArray_content_1 :: (obj => obj set)) (this :: obj)) \<subseteq> ((fieldRead (SetIterBoundedArray_content :: (obj => obj set)) (this :: obj)) Un {(x :: obj)})))